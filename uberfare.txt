import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error

df = pd.read_csv(r'E:\7thsemcodes\ML\uber\uber.csv')        # dataset ko local me rakho, naam sahi karo
df = df.dropna()
df = df[(df.fare_amount>0)&(df.fare_amount<100)]
df = df[(df.passenger_count>0)&(df.passenger_count<8)]

# distance calculation simplified (approx)
df['distance'] = np.sqrt((df.pickup_latitude - df.dropoff_latitude)**2 + (df.pickup_longitude - df.dropoff_longitude)**2)

# Features & target
X = df[['passenger_count','distance']]
y = df['fare_amount']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# Linear Regression
lr = LinearRegression()
lr.fit(X_train, y_train)
y_lr = lr.predict(X_test)

# Random Forest
rf = RandomForestRegressor(n_estimators=50, random_state=1)
rf.fit(X_train, y_train)
y_rf = rf.predict(X_test)

# Eval
def eval(y_true, y_pred):
    return r2_score(y_true, y_pred), np.sqrt(mean_squared_error(y_true, y_pred))

print("LR:", eval(y_test, y_lr))
print("RF:", eval(y_test, y_rf))

